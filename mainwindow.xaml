<Window x:Class="UmbrellaDesign.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        xmlns:local="clr-namespace:UmbrellaDesign"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
        Title="[DotA2] Umbrella Soft" Height="390" Width="414"
        ScrollViewer.VerticalScrollBarVisibility="Disabled" WindowStyle="None" ResizeMode="NoResize"
        WindowStartupLocation="CenterScreen" Icon="images/logo.png">
  <FrameworkElement.Resources>
    <Style x:Key="head_button" TargetType="{x:Type Button}">
      <Setter Property="Control.Background" Value="#181819"/>
      <Setter Property="Control.Foreground" Value="White"/>
      <Setter Property="Control.FontSize" Value="15"/>
      <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Border CornerRadius="2" Background="{TemplateBinding Control.Background}">
              <Grid>
                <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding ContentControl.Content}"
                                  HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
              </Grid>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="UIElement.IsMouseOver" Value="true">
                <Setter Property="Control.Background" Value="#1f1f21"/>
                <Setter Property="Control.Foreground" Value="White"/>
              </Trigger>
              <Trigger Property="ButtonBase.IsPressed" Value="true">
                <Setter Property="Control.Background" Value="#0A0A15"/>
                <Setter Property="Control.Foreground" Value="White"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="{x:Type Button}">
      <Setter Property="Control.Background" Value="#1f1f21"/>
      <Setter Property="Control.Foreground" Value="White"/>
      <Setter Property="Control.FontSize" Value="15"/>
      <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Border CornerRadius="2" Background="{TemplateBinding Control.Background}">
              <Grid>
                <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding ContentControl.Content}"
                                  HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
              </Grid>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="UIElement.IsMouseOver" Value="true">
                <Setter Property="Control.Background" Value="#181819"/>
                <Setter Property="Control.Foreground" Value="White"/>
              </Trigger>
              <Trigger Property="ButtonBase.IsPressed" Value="true">
                <Setter Property="Control.Background" Value="#0A0A15"/>
                <Setter Property="Control.Foreground" Value="White"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="FocusVisual">
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate>
            <Rectangle Margin="2" SnapsToDevicePixels="true"
                       Stroke="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}" StrokeThickness="1"
                       StrokeDashArray="1 2"/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
      <GradientStop Color="#292930" Offset="0.0"/>
      <GradientStop Color="#292930" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#1c1c20"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#1c1c20"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
    <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
      <GradientStop Color="#292930" Offset="0.0"/>
      <GradientStop Color="#292930" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#4f292930"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#4f292930"/>
    <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
      <GradientStop Color="#292930" Offset="0.0"/>
      <GradientStop Color="#292930" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
    <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
      <GradientStop Color="#292930" Offset="0.0"/>
      <GradientStop Color="#292930" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#4f292930"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#4f292930"/>
    <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
      <GradientStop Color="#292930" Offset="0.0"/>
      <GradientStop Color="#292930" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
      <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
      <Setter Property="Control.IsTabStop" Value="false"/>
      <Setter Property="UIElement.Focusable" Value="false"/>
      <Setter Property="ButtonBase.ClickMode" Value="Press"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ToggleButton}">
            <Border x:Name="templateRoot" BorderBrush="{StaticResource ComboBox.Static.Border}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Background="{StaticResource ComboBox.Static.Background}" SnapsToDevicePixels="true">
              <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right"
                      Margin="0" SnapsToDevicePixels="true"
                      Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                <Path x:Name="arrow"
                      Data="F1 M 0,0 L 2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0 Z"
                      Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0"
                      VerticalAlignment="Center"/>
              </Border>
            </Border>
            <ControlTemplate.Triggers>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                             Value="true"/>
                  <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                  <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                  <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"
                        Property="Border.Background"/>
                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"
                        Property="Border.BorderBrush"/>
                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"
                        Property="Border.Background"/>
                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"
                        Property="Border.BorderBrush"/>
              </MultiDataTrigger>
              <Trigger Property="UIElement.IsMouseOver" Value="true">
                <Setter TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}" Property="Shape.Fill"/>
              </Trigger>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                  <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                             Value="false"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"
                        Property="Border.Background"/>
                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"
                        Property="Border.BorderBrush"/>
              </MultiDataTrigger>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                  <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                             Value="true"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"
                        Property="Border.Background"/>
                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"
                        Property="Border.BorderBrush"/>
                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"
                        Property="Border.Background"/>
                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"
                        Property="Border.BorderBrush"/>
              </MultiDataTrigger>
              <Trigger Property="ButtonBase.IsPressed" Value="true">
                <Setter TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}" Property="Shape.Fill"/>
              </Trigger>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                  <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                             Value="false"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"
                        Property="Border.Background"/>
                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"
                        Property="Border.BorderBrush"/>
              </MultiDataTrigger>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                  <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                             Value="true"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"
                        Property="Border.Background"/>
                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"
                        Property="Border.BorderBrush"/>
                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"
                        Property="Border.Background"/>
                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"
                        Property="Border.BorderBrush"/>
              </MultiDataTrigger>
              <Trigger Property="UIElement.IsEnabled" Value="false">
                <Setter TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}" Property="Shape.Fill"/>
              </Trigger>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                  <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                             Value="false"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"
                        Property="Border.Background"/>
                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"
                        Property="Border.BorderBrush"/>
              </MultiDataTrigger>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                  <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                             Value="true"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"
                        Property="Border.Background"/>
                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"
                        Property="Border.BorderBrush"/>
                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"
                        Property="Border.Background"/>
                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"
                        Property="Border.BorderBrush"/>
              </MultiDataTrigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
      <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
        </Grid.ColumnDefinitions>
        <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" Margin="1"
               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
               Placement="Bottom"
               IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
          <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent"
                                         FrameworkElement.MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                         FrameworkElement.MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
            <Border x:Name="dropDownBorder"
                    BorderBrush="{DynamicResource {x:Static JetSystemColors.WindowFrameBrushKey}}" BorderThickness="0"
                    Background="{StaticResource ComboBox.Static.Background}">
              <ScrollViewer x:Name="DropDownScrollViewer">
                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                  <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                    <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}"
                               Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                               Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                  </Canvas>
                  <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                </Grid>
              </ScrollViewer>
            </Border>
          </Themes:SystemDropShadowChrome>
        </Popup>
        <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding Control.BorderBrush}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}"
                      Background="{TemplateBinding Control.Background}" Grid.ColumnSpan="2"
                      Style="{StaticResource ComboBoxToggleButton}"
                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                          ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}"
                          Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                          ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}"
                          HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" IsHitTestVisible="false"
                          Margin="{TemplateBinding Control.Padding}"
                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                          VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
      </Grid>
      <ControlTemplate.Triggers>
        <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
          <Setter TargetName="shadow" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
          <Setter TargetName="shadow" Property="Themes:SystemDropShadowChrome.Color" Value="#71000000"/>
        </Trigger>
        <Trigger Property="ItemsControl.HasItems" Value="false">
          <Setter TargetName="dropDownBorder" Property="FrameworkElement.Height" Value="95"/>
        </Trigger>
        <MultiTrigger>
          <MultiTrigger.Conditions>
            <Condition Property="ItemsControl.IsGrouping" Value="true"/>
            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
          </MultiTrigger.Conditions>
          <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
        </MultiTrigger>
        <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
          <Setter TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"
                  Property="Canvas.Top"/>
          <Setter TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"
                  Property="Canvas.Left"/>
        </Trigger>
      </ControlTemplate.Triggers>
    </ControlTemplate>
    <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
      <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
      <Setter Property="UIElement.AllowDrop" Value="true"/>
      <Setter Property="FrameworkElement.MinWidth" Value="0"/>
      <Setter Property="FrameworkElement.MinHeight" Value="0"/>
      <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
      <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
      <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type TextBox}">
            <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false"
                          HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
      <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
        </Grid.ColumnDefinitions>
        <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2"
               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
               Placement="Bottom"
               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
          <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent"
                                         FrameworkElement.MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                         FrameworkElement.MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
            <Border x:Name="dropDownBorder"
                    BorderBrush="{DynamicResource {x:Static JetSystemColors.WindowFrameBrushKey}}" BorderThickness="1"
                    Background="{DynamicResource {x:Static JetSystemColors.WindowBrushKey}}">
              <ScrollViewer x:Name="DropDownScrollViewer">
                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                  <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                    <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}"
                               Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                               Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                  </Canvas>
                  <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                </Grid>
              </ScrollViewer>
            </Border>
          </Themes:SystemDropShadowChrome>
        </Popup>
        <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding Control.BorderBrush}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}"
                      Background="{TemplateBinding Control.Background}" Grid.ColumnSpan="2"
                      Style="{StaticResource ComboBoxToggleButton}"
                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Border x:Name="border" Background="{StaticResource TextBox.Static.Background}"
                Margin="{TemplateBinding Control.BorderThickness}">
          <TextBox x:Name="PART_EditableTextBox"
                   HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                   Margin="{TemplateBinding Control.Padding}" Style="{StaticResource ComboBoxEditableTextBox}"
                   VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                   IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"/>
        </Border>
      </Grid>
      <ControlTemplate.Triggers>
        <Trigger Property="UIElement.IsEnabled" Value="false">
          <Setter TargetName="border" Property="UIElement.Opacity" Value="0.56"/>
        </Trigger>
        <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="true">
          <Setter Property="Control.Foreground" Value="Black"/>
        </Trigger>
        <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
          <Setter TargetName="shadow" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
          <Setter TargetName="shadow" Property="Themes:SystemDropShadowChrome.Color" Value="#71000000"/>
        </Trigger>
        <Trigger Property="ItemsControl.HasItems" Value="false">
          <Setter TargetName="dropDownBorder" Property="FrameworkElement.Height" Value="95"/>
        </Trigger>
        <MultiTrigger>
          <MultiTrigger.Conditions>
            <Condition Property="ItemsControl.IsGrouping" Value="true"/>
            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
          </MultiTrigger.Conditions>
          <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
        </MultiTrigger>
        <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
          <Setter TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"
                  Property="Canvas.Top"/>
          <Setter TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"
                  Property="Canvas.Left"/>
        </Trigger>
      </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
      <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
      <Setter Property="Control.Background" Value="{StaticResource ComboBox.Static.Background}"/>
      <Setter Property="Control.BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
      <Setter Property="Control.Foreground"
              Value="{DynamicResource {x:Static JetSystemColors.WindowTextBrushKey}}"/>
      <Setter Property="Control.BorderThickness" Value="1"/>
      <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
      <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
      <Setter Property="Control.Padding" Value="6,3,5,3"/>
      <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
      <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
      <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
      <Setter Property="Control.Template" Value="{StaticResource ComboBoxTemplate}"/>
      <Style.Triggers>
        <Trigger Property="ComboBox.IsEditable" Value="true">
          <Setter Property="Control.IsTabStop" Value="false"/>
          <Setter Property="Control.Padding" Value="2"/>
          <Setter Property="Control.Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
        </Trigger>
      </Style.Triggers>
    </Style>
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Background" Color="#1F1F21"/>
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Border" Color="#abacb4"/>
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Background" Color="#1c1c20"/>
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Border" Color="#00abacb4"/>
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Background" Color="#1c1c20"/>
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Border" Color="#00abacb4"/>
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Background" Color="#1c1c20"/>
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Border" Color="#00DADADA"/>
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewFocus.Border" Color="#FF26A0DA"/>
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Background" Color="#1f1f20"/>
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Border" Color="#1c1c20"/>
    <Style x:Key="ComboBoxItemStyle1" TargetType="{x:Type ComboBoxItem}">
      <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
      <Setter Property="Control.Padding" Value="4,1"/>
      <Setter Property="Control.HorizontalContentAlignment"
              Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
      <Setter Property="Control.VerticalContentAlignment"
              Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
      <Setter Property="Control.Background" Value="Transparent"/>
      <Setter Property="Control.BorderBrush" Value="Transparent"/>
      <Setter Property="Control.BorderThickness" Value="1"/>
      <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ComboBoxItem}">
            <Border x:Name="Bd" BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Background="{TemplateBinding Control.Background}" Padding="{TemplateBinding Control.Padding}"
                    SnapsToDevicePixels="true">
              <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="UIElement.IsEnabled" Value="false">
                <Setter TargetName="Bd" Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}"
                        Property="TextElement.Foreground"/>
              </Trigger>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="ListBoxItem.IsSelected" Value="false"/>
                  <Condition Property="UIElement.IsMouseOver" Value="true"/>
                  <Condition Property="UIElement.IsKeyboardFocused" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHover.Background}"
                        Property="Border.Background"/>
                <Setter TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHover.Border}"
                        Property="Border.BorderBrush"/>
              </MultiTrigger>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="ListBoxItem.IsSelected" Value="true"/>
                  <Condition Property="UIElement.IsMouseOver" Value="false"/>
                  <Condition Property="UIElement.IsKeyboardFocused" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelected.Background}"
                        Property="Border.Background"/>
                <Setter TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelected.Border}"
                        Property="Border.BorderBrush"/>
              </MultiTrigger>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="ListBoxItem.IsSelected" Value="true"/>
                  <Condition Property="UIElement.IsMouseOver" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedHover.Background}"
                        Property="Border.Background"/>
                <Setter TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedHover.Border}"
                        Property="Border.BorderBrush"/>
              </MultiTrigger>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="ListBoxItem.IsSelected" Value="true"/>
                  <Condition Property="UIElement.IsMouseOver" Value="false"/>
                  <Condition Property="UIElement.IsKeyboardFocused" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Background}"
                        Property="Border.Background"/>
                <Setter TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Border}"
                        Property="Border.BorderBrush"/>
              </MultiTrigger>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="ListBoxItem.IsSelected" Value="false"/>
                  <Condition Property="UIElement.IsMouseOver" Value="false"/>
                  <Condition Property="UIElement.IsKeyboardFocused" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewFocus.Border}"
                        Property="Border.BorderBrush"/>
              </MultiTrigger>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="ListBoxItem.IsSelected" Value="false"/>
                  <Condition Property="UIElement.IsMouseOver" Value="true"/>
                  <Condition Property="UIElement.IsKeyboardFocused" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHoverFocus.Background}"
                        Property="Border.Background"/>
                <Setter TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHoverFocus.Border}"
                        Property="Border.BorderBrush"/>
              </MultiTrigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  </FrameworkElement.Resources>
  <Grid Background="#000000" Margin="0,0,0,0">
    <Grid Background="#FF292930" Margin="1,1,1,1">
      <Grid.RowDefinitions>
        <RowDefinition Height="89*"/>
        <RowDefinition Height="92*"/>
        <RowDefinition Height="87*"/>
        <RowDefinition Height="116*"/>
      </Grid.RowDefinitions>
      <Grid MouseLeftButtonDown="Grid_MouseLeftButtonDown" Row="0" Height="86" VerticalAlignment="Top"
            Background="#FF1C1C20">
        <Grid Margin="0, 6, 0, 0">
          <Grid Margin="0, 0, 6, 0" HorizontalAlignment="Right" Width="54" Height="20" VerticalAlignment="Top">
            <Button Click="Close_btn_Click" x:Name="close_btn" Style="{StaticResource head_button}">
              <StackPanel VerticalAlignment="Center">
                <TextBlock TextWrapping="Wrap" Text="x" FontWeight="Bold" TextAlignment="Center" FontSize="20"
                           Foreground="#FF575764" Margin="0, -8, 0, 0"/>
              </StackPanel>
            </Button>
          </Grid>
          <Grid Margin="0, 0, 63, 0" HorizontalAlignment="Right" Width="51" Height="20" VerticalAlignment="Top">
            <Button Click="Minimaze_btn_Click" x:Name="minimaze_btn" Style="{StaticResource head_button}">
              <StackPanel VerticalAlignment="Center">
                <TextBlock TextWrapping="Wrap" Text="_" FontWeight="Bold" TextAlignment="Center" FontSize="20"
                           Foreground="#FF575764" Margin="0 -15, 0, 0"/>
              </StackPanel>
            </Button>
          </Grid>
        </Grid>
        <Image x:Name="logo_image" Margin="15,15,0,15" Source="images/logo.png" HorizontalAlignment="Left"
               Width="106.5"/>
        <Grid Margin="97.5, 3, 0 ,3">
          <TextBlock x:Name="first_caption" TextWrapping="Wrap" Text="UMBRELLA" TextAlignment="Left" FontWeight="Bold"
                     FontSize="27" Foreground="#FFF1F1F7" Margin="0, 15, 0, 39" FontFamily="Arial Black"/>
          <TextBlock x:Name="second_caption" TextWrapping="Wrap" Text="Corporation" TextAlignment="Left" FontSize="23"
                     Foreground="#FFABACB4" Margin="0, 40.5, 15, 6" FontFamily="Calibri Light"/>
          <ComboBox SelectionChanged="ComboBox_SelectionChanged" x:Name="server_combo" HorizontalAlignment="Right"
                    VerticalAlignment="Center" FontSize="12" Foreground="#574" Margin="0, 38, 20, 6"
                    FontFamily="Arial Black" SelectedIndex="-1" Visibility="Visible"
                    Style="{DynamicResource ComboBoxStyle1}">
            <ComboBoxItem Content="Server 1 - France" Style="{DynamicResource ComboBoxItemStyle1}"/>
            <ComboBoxItem Content="Server 2 - Moscow" Style="{DynamicResource ComboBoxItemStyle1}"/>
            <ComboBoxItem Content="Server 3 - China" Style="{DynamicResource ComboBoxItemStyle1}"/>
            <ComboBoxItem Content="Server 4 - Japan" Style="{DynamicResource ComboBoxItemStyle1}"/>
            <ComboBoxItem Content="Server 5 - World" Style="{DynamicResource ComboBoxItemStyle1}"/>
          </ComboBox>
        </Grid>
      </Grid>
      <Grid Row="1">
        <Grid x:Name="load_activity" Margin="10,0,10,0" Visibility="Hidden" VerticalAlignment="Bottom">
          <ProgressBar x:Name="pbStatus" Minimum="0" Maximum="100" Height="30" IsIndeterminate="true"
                       Background="{x:Null}"/>
        </Grid>
      </Grid>
      <Grid x:Name="login_activity" VerticalAlignment="Center" Visibility="Visible" Height="98"
            Margin="0,80,0,3" RowSpan="2">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="81*"/>
          <ColumnDefinition Width="22*"/>
        </Grid.ColumnDefinitions>
        <TextBox x:Name="login_tb" BorderThickness="1" Margin="120, 25, 15, 0" TextWrapping="Wrap" FontSize="18"
                 BorderBrush="#FF242434" Background="#FF1F1F21" Foreground="#FFE6E8F3" Height="27"
                 VerticalAlignment="Top" Padding="3, 0, 0, 0" SelectionBrush="#FF7FA8CB" Text="" Grid.ColumnSpan="2"/>
        <PasswordBox x:Name="password_tb" BorderThickness="1" Margin="120, 60, 15, 0" FontSize="18"
                     BorderBrush="#FF242434" Background="#FF1F1F21" Foreground="#FFE6E8F3" Height="27"
                     VerticalAlignment="Top" Padding="3, 0, 0, 0" SelectionBrush="#FF7FA8CB" Grid.ColumnSpan="2"/>
        <TextBlock TextAlignment="Left" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="15"
                   Foreground="White" Width="56" Margin="15, 28, 0, 0" Text="Login:"
                   RenderTransformOrigin="0.392,0.594" Background="{x:Null}"/>
        <TextBlock TextAlignment="Left" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="15"
                   Foreground="White" Width="90" Margin="15, 63, 0, 0" Text="Password:" Background="{x:Null}"/>
      </Grid>
      <Grid x:Name="button_login" Row="2" Visibility="Visible">
        <StackPanel VerticalAlignment="Center" Orientation="Vertical">
          <Button Click="Login_btn_Click" x:Name="login_btn" VerticalAlignment="Center" Margin="15, 2"
                  IsDefault="true">
            <StackPanel VerticalAlignment="Center" Orientation="Horizontal" Height="30">
              <ImageAwesome x:Name="loading_ico" Icon="Spinner" Spin="true" SpinDuration="4" FrameworkElement.Height="15"
                            FrameworkElement.Margin="0, 0, 10, 0" UIElement.Visibility="Visible"/>
              <TextBlock TextWrapping="Wrap" Text="Login" FontWeight="Bold" TextAlignment="Center" FontSize="18"
                         Margin="0,0,0,0" Foreground="#fafafa" Grid.ColumnSpan="2"/>
            </StackPanel>
          </Button>
        </StackPanel>
      </Grid>
      <Grid x:Name="cheat_log" Row="2" VerticalAlignment="Bottom" Margin="10,0,10,10" Height="110"
            Visibility="Visible" RowSpan="2">
        <GroupBox Padding="5" Grid.ColumnSpan="2">
          <HeaderedContentControl.Header>
            <TextBlock Padding="20, 0, 20, 0" Foreground="#574" Text="Loader log" FontWeight="Bold"/>
          </HeaderedContentControl.Header>
          <RichTextBox TextChanged="Log_window_TextChanged" x:Name="log_window" Margin="2" BorderThickness="1"
                       SelectionBrush="#FF5D5D5D" Foreground="Gray" IsReadOnly="true" Background="{x:Null}"
                       BorderBrush="{x:Null}">
            <FlowDocument LineHeight="1">
              <Paragraph>
                <Run Text="Hi! It`s log window."/>
                <LineBreak/>
                <Run/>
              </Paragraph>
            </FlowDocument>
          </RichTextBox>
        </GroupBox>
      </Grid>
    </Grid>
  </Grid>
</Window>