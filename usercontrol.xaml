<Window x:Class="UmbrellaDesign.Window1"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        xmlns:local="clr-namespace:UmbrellaDesign"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
        Title="User Control Panel" ScrollViewer.VerticalScrollBarVisibility="Disabled" WindowStyle="None"
        ResizeMode="NoResize" Width="620" Height="380" WindowStartupLocation="CenterScreen"
        Icon="images/logo.png">
  <FrameworkElement.Resources>
    <SolidColorBrush x:Key="StandardBorderBrush" Color="#888"/>
    <SolidColorBrush x:Key="StandardBackgroundBrush" Color="Black"/>
    <SolidColorBrush x:Key="HoverBorderBrush" Color="#DDD"/>
    <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="Gray"/>
    <SolidColorBrush x:Key="SelectedForegroundBrush" Color="White"/>
    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888"/>
    <SolidColorBrush x:Key="GlyphBrush" Color="#444"/>
    <SolidColorBrush x:Key="NormalBrush" Color="#888"/>
    <SolidColorBrush x:Key="NormalBorderBrush" Color="#888"/>
    <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#FF686868"/>
    <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#888"/>
    <LinearGradientBrush x:Key="ListBoxBackgroundBrush" StartPoint="0,0" EndPoint="1,0.001">
      <GradientBrush.GradientStops>
        <GradientStopCollection>
          <GradientStop Color="White" Offset="0.0"/>
          <GradientStop Color="White" Offset="0.6"/>
          <GradientStop Color="#DDDDDD" Offset="1.2"/>
        </GradientStopCollection>
      </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="StandardBrush" StartPoint="0,0" EndPoint="0,1">
      <GradientBrush.GradientStops>
        <GradientStopCollection>
          <GradientStop Color="#FFF" Offset="0.0"/>
          <GradientStop Color="#CCC" Offset="1.0"/>
        </GradientStopCollection>
      </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
      <GradientBrush.GradientStops>
        <GradientStopCollection>
          <GradientStop Color="#BBB" Offset="0.0"/>
          <GradientStop Color="#EEE" Offset="0.1"/>
          <GradientStop Color="#EEE" Offset="0.9"/>
          <GradientStop Color="#FFF" Offset="1.0"/>
        </GradientStopCollection>
      </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
      <Setter Property="UIElement.Visibility" Value="Hidden"/>
      <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
      <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
      <Setter Property="UIElement.Focusable" Value="false"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type RepeatButton}">
            <Border Name="Border" Margin="1" CornerRadius="2" Background="{StaticResource NormalBrush}"
                    BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="1">
              <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource GlyphBrush}"
                    Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"/>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="ButtonBase.IsPressed" Value="true">
                <Setter TargetName="Border" Value="{StaticResource PressedBrush}" Property="Border.Background"/>
              </Trigger>
              <Trigger Property="UIElement.IsEnabled" Value="false">
                <Setter Value="{StaticResource DisabledForegroundBrush}" Property="Control.Foreground"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
      <Setter Property="UIElement.Visibility" Value="Hidden"/>
      <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
      <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
      <Setter Property="Control.IsTabStop" Value="false"/>
      <Setter Property="UIElement.Focusable" Value="false"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type RepeatButton}">
            <Border Background="Black"/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
      <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
      <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
      <Setter Property="Control.IsTabStop" Value="false"/>
      <Setter Property="UIElement.Focusable" Value="false"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Thumb}">
            <Border CornerRadius="4" Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="0" Width="8" Margin="8,0,-2,0"/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
      <Grid>
        <Grid.RowDefinitions>
          <RowDefinition MaxHeight="0"/>
          <RowDefinition Height="0.00001*"/>
          <RowDefinition MaxHeight="0"/>
        </Grid.RowDefinitions>
        <Border Grid.RowSpan="3" CornerRadius="2" Background="Transparent"/>
        <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="18"
                      Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z"/>
        <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
          <Track.DecreaseRepeatButton>
            <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand"/>
          </Track.DecreaseRepeatButton>
          <Track.Thumb>
            <Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0"
                   Background="{StaticResource HorizontalNormalBrush}"
                   BorderBrush="{StaticResource HorizontalNormalBorderBrush}"/>
          </Track.Thumb>
          <Track.IncreaseRepeatButton>
            <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand"/>
          </Track.IncreaseRepeatButton>
        </Track>
        <RepeatButton Grid.Row="3" Style="{StaticResource ScrollBarLineButton}" Height="18"
                      Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z"/>
      </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition MaxWidth="18"/>
          <ColumnDefinition Width="0.00001*"/>
          <ColumnDefinition MaxWidth="18"/>
        </Grid.ColumnDefinitions>
        <Border Grid.ColumnSpan="3" CornerRadius="2" Background="#F0F0F0"/>
        <RepeatButton Grid.Column="0" Style="{StaticResource ScrollBarLineButton}" Width="18"
                      Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z"/>
        <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="false">
          <Track.DecreaseRepeatButton>
            <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand"/>
          </Track.DecreaseRepeatButton>
          <Track.Thumb>
            <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0,1,0,1" Background="{StaticResource NormalBrush}"
                   BorderBrush="{StaticResource NormalBorderBrush}"/>
          </Track.Thumb>
          <Track.IncreaseRepeatButton>
            <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand"/>
          </Track.IncreaseRepeatButton>
        </Track>
        <RepeatButton Grid.Column="3" Style="{StaticResource ScrollBarLineButton}" Width="18"
                      Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z"/>
      </Grid>
    </ControlTemplate>
    <Style TargetType="{x:Type ScrollBar}">
      <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
      <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
      <Style.Triggers>
        <Trigger Property="ScrollBar.Orientation" Value="Horizontal">
          <Setter Property="FrameworkElement.Width" Value="Auto"/>
          <Setter Property="FrameworkElement.Height" Value="18"/>
          <Setter Property="Control.Template" Value="{StaticResource HorizontalScrollBar}"/>
        </Trigger>
        <Trigger Property="ScrollBar.Orientation" Value="Vertical">
          <Setter Property="FrameworkElement.Width" Value="18"/>
          <Setter Property="FrameworkElement.Height" Value="Auto"/>
          <Setter Property="Control.Template" Value="{StaticResource VerticalScrollBar}"/>
        </Trigger>
      </Style.Triggers>
    </Style>
    <Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
      <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ScrollViewer}">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>
              <ScrollContentPresenter Grid.Column="1"/>
              <ScrollBar Name="PART_VerticalScrollBar" Value="{TemplateBinding ScrollViewer.VerticalOffset}"
                         Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}"
                         ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}"
                         Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}"/>
              <ScrollBar Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Grid.Column="1"
                         Value="{TemplateBinding ScrollViewer.HorizontalOffset}"
                         Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}"
                         ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}"
                         Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}"/>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="key_button" TargetType="{x:Type Button}">
      <Setter Property="Control.Background" Value="#1f1f21"/>
      <Setter Property="Control.Foreground" Value="White"/>
      <Setter Property="Control.FontSize" Value="15"/>
      <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Border CornerRadius="12" Background="{TemplateBinding Control.Background}">
              <Grid>
                <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding ContentControl.Content}"
                                  HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
              </Grid>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="UIElement.IsMouseOver" Value="true">
                <Setter Property="Control.Background" Value="#292930"/>
                <Setter Property="Control.Foreground" Value="White"/>
              </Trigger>
              <Trigger Property="ButtonBase.IsPressed" Value="true">
                <Setter Property="Control.Background" Value="#0A0A15"/>
                <Setter Property="Control.Foreground" Value="White"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="head_button" TargetType="{x:Type Button}">
      <Setter Property="Control.Background" Value="#181819"/>
      <Setter Property="Control.Foreground" Value="White"/>
      <Setter Property="Control.FontSize" Value="15"/>
      <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Border CornerRadius="2" Background="{TemplateBinding Control.Background}">
              <Grid>
                <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding ContentControl.Content}"
                                  HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
              </Grid>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="UIElement.IsMouseOver" Value="true">
                <Setter Property="Control.Background" Value="#1f1f21"/>
                <Setter Property="Control.Foreground" Value="White"/>
              </Trigger>
              <Trigger Property="ButtonBase.IsPressed" Value="true">
                <Setter Property="Control.Background" Value="#0A0A15"/>
                <Setter Property="Control.Foreground" Value="White"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="{x:Type Button}">
      <Setter Property="Control.Background" Value="#1f1f21"/>
      <Setter Property="Control.Foreground" Value="White"/>
      <Setter Property="Control.FontSize" Value="15"/>
      <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Border CornerRadius="2" Background="{TemplateBinding Control.Background}">
              <Grid>
                <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding ContentControl.Content}"
                                  HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
              </Grid>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="UIElement.IsMouseOver" Value="true">
                <Setter Property="Control.Background" Value="#181819"/>
                <Setter Property="Control.Foreground" Value="White"/>
              </Trigger>
              <Trigger Property="ButtonBase.IsPressed" Value="true">
                <Setter Property="Control.Background" Value="#0A0A15"/>
                <Setter Property="Control.Foreground" Value="White"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  </FrameworkElement.Resources>
  <Grid Background="#000000">
    <Grid x:Name="main_form" Background="#FF292930" Margin=".8">
      <Grid MouseLeftButtonDown="Grid_MouseLeftButtonDown" Height="85.5" VerticalAlignment="Top"
            Background="#FF1C1C20">
        <Grid Margin="0, 6, 0, 0">
          <Grid Margin="0, 0, 6, 0" HorizontalAlignment="Right" Width="54" Height="20" VerticalAlignment="Top">
            <Button Click="Close_btn_Click" x:Name="close_btn" Style="{StaticResource head_button}">
              <ContentControl.Content>
                <StackPanel VerticalAlignment="Center">
                  <TextBlock TextWrapping="Wrap" Text="x" FontWeight="Bold" TextAlignment="Center" FontSize="20"
                             Foreground="#FF575764" Margin="0, -8, 0, 0"/>
                </StackPanel>
              </ContentControl.Content>
            </Button>
          </Grid>
          <Grid Margin="0, 0, 63, 0" HorizontalAlignment="Right" Width="51" Height="20" VerticalAlignment="Top">
            <Button Click="Minimaze_btn_Click" x:Name="minimaze_btn" Style="{StaticResource head_button}">
              <ContentControl.Content>
                <StackPanel VerticalAlignment="Center">
                  <TextBlock TextWrapping="Wrap" Text="_" FontWeight="Bold" TextAlignment="Center" FontSize="20"
                             Foreground="#FF575764" Margin="0 -15, 0, 0"/>
                </StackPanel>
              </ContentControl.Content>
            </Button>
          </Grid>
          <Grid Margin="0, 0, 122, 0" HorizontalAlignment="Right" Width="80" Height="20" VerticalAlignment="Top">
            <Button Click="Button_Click_3" Style="{StaticResource head_button}">
              <ContentControl.Content>
                <StackPanel VerticalAlignment="Center">
                  <TextBlock TextWrapping="Wrap" Text="Black list" TextAlignment="Center" FontSize="16" Foreground="#FF575764"
                             Margin="0, 0, 0, 0"/>
                </StackPanel>
              </ContentControl.Content>
            </Button>
          </Grid>
        </Grid>
        <Image x:Name="logo_image" Margin="15,15,0,15" Source="images/logo.png" HorizontalAlignment="Left"
               Width="106.5"/>
        <Grid Margin="97.5, 3, 0 ,3">
          <TextBlock x:Name="first_caption" TextWrapping="Wrap" Text="UMBRELLA" TextAlignment="Left" FontWeight="Bold"
                     FontSize="27" Foreground="#FFF1F1F7" Margin="0, 15, 0, 39" FontFamily="Arial Black"/>
          <TextBlock x:Name="second_caption" TextWrapping="Wrap" Text="Corporation" TextAlignment="Left" FontSize="23"
                     Foreground="#FFABACB4" Margin="0, 40.5, 15, 6" FontFamily="Calibri Light"/>
        </Grid>
      </Grid>
      <Grid Margin="0, 86, 0, 0">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="247*"/>
          <ColumnDefinition Width="137*"/>
        </Grid.ColumnDefinitions>
        <Grid x:Name="black_list_grid" Column="0" Visibility="Collapsed">
          <Grid.RowDefinitions>
          </Grid.RowDefinitions>
          <Grid Row="0">
            <Viewbox Margin="8" Stretch="Fill">
              <DataGrid SelectionChanged="DataGrid_SelectionChanged" x:Name="dataGrid" Height="290" Width="382"
                        HeadersVisibility="Column" AutoGenerateColumns="false" CanUserResizeColumns="false"
                        ItemsSource="{Binding toxicGridItems}">
                <FrameworkElement.Resources>
                  <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Control.Background" Value="#292930"/>
                    <Setter Property="Control.Foreground" Value="#FFFFFF"/>
                  </Style>
                  <Style TargetType="{x:Type DataGrid}">
                    <Setter Property="DataGrid.RowBackground" Value="Transparent"/>
                    <Setter Property="Control.Background" Value="Transparent"/>
                    <Setter Property="DataGrid.CanUserResizeRows" Value="false"/>
                    <Setter Property="Control.Foreground" Value="#DCDDDD"/>
                    <Setter Property="DataGrid.RowHeight" Value="24"/>
                  </Style>
                  <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#292930" Offset="0.0"/>
                    <GradientStop Color="#292930" Offset="1.0"/>
                  </LinearGradientBrush>
                  <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#1c1c20"/>
                  <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
                  <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#1c1c20"/>
                  <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
                  <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
                  <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
                  <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#292930" Offset="0.0"/>
                    <GradientStop Color="#292930" Offset="1.0"/>
                  </LinearGradientBrush>
                  <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#4f292930"/>
                  <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
                  <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#4f292930"/>
                  <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#292930" Offset="0.0"/>
                    <GradientStop Color="#292930" Offset="1.0"/>
                  </LinearGradientBrush>
                  <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
                  <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
                  <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#292930" Offset="0.0"/>
                    <GradientStop Color="#292930" Offset="1.0"/>
                  </LinearGradientBrush>
                  <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#4f292930"/>
                  <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
                  <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#4f292930"/>
                  <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#292930" Offset="0.0"/>
                    <GradientStop Color="#292930" Offset="1.0"/>
                  </LinearGradientBrush>
                  <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
                  <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
                  <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
                  <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
                  <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
                  <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
                  <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
                  <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
                  <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
                  <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
                    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
                    <Setter Property="Control.IsTabStop" Value="false"/>
                    <Setter Property="UIElement.Focusable" Value="false"/>
                    <Setter Property="ButtonBase.ClickMode" Value="Press"/>
                    <Setter Property="Control.Template">
                      <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                          <Border x:Name="templateRoot" BorderBrush="{StaticResource ComboBox.Static.Border}"
                                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                                  Background="{StaticResource ComboBox.Static.Background}" SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right"
                                    Margin="0" SnapsToDevicePixels="true"
                                    Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                              <Path x:Name="arrow"
                                    Data="F1 M 0,0 L 2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0 Z"
                                    Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0"
                                    VerticalAlignment="Center"/>
                            </Border>
                          </Border>
                          <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                           Value="true"/>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                              </MultiDataTrigger.Conditions>
                              <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"
                                      Property="Border.Background"/>
                              <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"
                                      Property="Border.BorderBrush"/>
                              <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"
                                      Property="Border.Background"/>
                              <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"
                                      Property="Border.BorderBrush"/>
                            </MultiDataTrigger>
                            <Trigger Property="UIElement.IsMouseOver" Value="true">
                              <Setter TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}" Property="Shape.Fill"/>
                            </Trigger>
                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                           Value="false"/>
                              </MultiDataTrigger.Conditions>
                              <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"
                                      Property="Border.Background"/>
                              <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"
                                      Property="Border.BorderBrush"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                           Value="true"/>
                              </MultiDataTrigger.Conditions>
                              <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"
                                      Property="Border.Background"/>
                              <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"
                                      Property="Border.BorderBrush"/>
                              <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"
                                      Property="Border.Background"/>
                              <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"
                                      Property="Border.BorderBrush"/>
                            </MultiDataTrigger>
                            <Trigger Property="ButtonBase.IsPressed" Value="true">
                              <Setter TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}" Property="Shape.Fill"/>
                            </Trigger>
                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                           Value="false"/>
                              </MultiDataTrigger.Conditions>
                              <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"
                                      Property="Border.Background"/>
                              <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"
                                      Property="Border.BorderBrush"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                           Value="true"/>
                              </MultiDataTrigger.Conditions>
                              <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"
                                      Property="Border.Background"/>
                              <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"
                                      Property="Border.BorderBrush"/>
                              <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"
                                      Property="Border.Background"/>
                              <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"
                                      Property="Border.BorderBrush"/>
                            </MultiDataTrigger>
                            <Trigger Property="UIElement.IsEnabled" Value="false">
                              <Setter TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}" Property="Shape.Fill"/>
                            </Trigger>
                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                           Value="false"/>
                              </MultiDataTrigger.Conditions>
                              <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"
                                      Property="Border.Background"/>
                              <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"
                                      Property="Border.BorderBrush"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                           Value="true"/>
                              </MultiDataTrigger.Conditions>
                              <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"
                                      Property="Border.Background"/>
                              <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"
                                      Property="Border.BorderBrush"/>
                              <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"
                                      Property="Border.Background"/>
                              <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"
                                      Property="Border.BorderBrush"/>
                            </MultiDataTrigger>
                          </ControlTemplate.Triggers>
                        </ControlTemplate>
                      </Setter.Value>
                    </Setter>
                  </Style>
                  <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                      </Grid.ColumnDefinitions>
                      <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" Margin="1"
                             PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                             Placement="Bottom"
                             IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                        <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent"
                                                       FrameworkElement.MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                                       FrameworkElement.MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                          <Border x:Name="dropDownBorder"
                                  BorderBrush="{DynamicResource {x:Static JetSystemColors.WindowFrameBrushKey}}" BorderThickness="0"
                                  Background="{StaticResource ComboBox.Static.Background}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                              <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                  <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}"
                                             Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                             Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                              </Grid>
                            </ScrollViewer>
                          </Border>
                        </Themes:SystemDropShadowChrome>
                      </Popup>
                      <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding Control.BorderBrush}"
                                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                                    Background="{TemplateBinding Control.Background}" Grid.ColumnSpan="2"
                                    Style="{StaticResource ComboBoxToggleButton}"
                                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                      <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}"
                                        Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                        ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}"
                                        HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" IsHitTestVisible="false"
                                        Margin="{TemplateBinding Control.Padding}"
                                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                        VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                      <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
                        <Setter TargetName="shadow" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
                        <Setter TargetName="shadow" Property="Themes:SystemDropShadowChrome.Color" Value="#71000000"/>
                      </Trigger>
                      <Trigger Property="ItemsControl.HasItems" Value="false">
                        <Setter TargetName="dropDownBorder" Property="FrameworkElement.Height" Value="95"/>
                      </Trigger>
                      <MultiTrigger>
                        <MultiTrigger.Conditions>
                          <Condition Property="ItemsControl.IsGrouping" Value="true"/>
                          <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                      </MultiTrigger>
                      <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                        <Setter TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"
                                Property="Canvas.Top"/>
                        <Setter TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"
                                Property="Canvas.Left"/>
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                  <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
                  <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
                    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
                    <Setter Property="UIElement.AllowDrop" Value="true"/>
                    <Setter Property="FrameworkElement.MinWidth" Value="0"/>
                    <Setter Property="FrameworkElement.MinHeight" Value="0"/>
                    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                    <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
                    <Setter Property="Control.Template">
                      <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                          <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false"
                                        HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </ControlTemplate>
                      </Setter.Value>
                    </Setter>
                  </Style>
                  <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                      </Grid.ColumnDefinitions>
                      <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2"
                             PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                             Placement="Bottom"
                             IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
                        <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent"
                                                       FrameworkElement.MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                                       FrameworkElement.MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                          <Border x:Name="dropDownBorder"
                                  BorderBrush="{DynamicResource {x:Static JetSystemColors.WindowFrameBrushKey}}" BorderThickness="1"
                                  Background="{DynamicResource {x:Static JetSystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                              <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                  <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}"
                                             Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                             Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                              </Grid>
                            </ScrollViewer>
                          </Border>
                        </Themes:SystemDropShadowChrome>
                      </Popup>
                      <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding Control.BorderBrush}"
                                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                                    Background="{TemplateBinding Control.Background}" Grid.ColumnSpan="2"
                                    Style="{StaticResource ComboBoxToggleButton}"
                                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                      <Border x:Name="border" Background="{StaticResource TextBox.Static.Background}"
                              Margin="{TemplateBinding Control.BorderThickness}">
                        <TextBox x:Name="PART_EditableTextBox"
                                 HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                 Margin="{TemplateBinding Control.Padding}" Style="{StaticResource ComboBoxEditableTextBox}"
                                 VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                 IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"/>
                      </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                      <Trigger Property="UIElement.IsEnabled" Value="false">
                        <Setter TargetName="border" Property="UIElement.Opacity" Value="0.56"/>
                      </Trigger>
                      <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="true">
                        <Setter Property="Control.Foreground" Value="Black"/>
                      </Trigger>
                      <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
                        <Setter TargetName="shadow" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
                        <Setter TargetName="shadow" Property="Themes:SystemDropShadowChrome.Color" Value="#71000000"/>
                      </Trigger>
                      <Trigger Property="ItemsControl.HasItems" Value="false">
                        <Setter TargetName="dropDownBorder" Property="FrameworkElement.Height" Value="95"/>
                      </Trigger>
                      <MultiTrigger>
                        <MultiTrigger.Conditions>
                          <Condition Property="ItemsControl.IsGrouping" Value="true"/>
                          <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                      </MultiTrigger>
                      <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                        <Setter TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"
                                Property="Canvas.Top"/>
                        <Setter TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"
                                Property="Canvas.Left"/>
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                  <Style x:Key="FocusVisual">
                    <Setter Property="Control.Template">
                      <Setter.Value>
                        <ControlTemplate>
                          <Rectangle Margin="2" SnapsToDevicePixels="true"
                                     Stroke="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}" StrokeThickness="1"
                                     StrokeDashArray="1 2"/>
                        </ControlTemplate>
                      </Setter.Value>
                    </Setter>
                  </Style>
                  <Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
                    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                    <Setter Property="Control.Background" Value="{StaticResource ComboBox.Static.Background}"/>
                    <Setter Property="Control.BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
                    <Setter Property="Control.Foreground" Value="#ffffff"/>
                    <Setter Property="Control.BorderThickness" Value="1"/>
                    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                    <Setter Property="Control.Padding" Value="6,3,5,3"/>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                    <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                    <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
                    <Setter Property="Control.Template" Value="{StaticResource ComboBoxTemplate}"/>
                    <Style.Triggers>
                      <Trigger Property="ComboBox.IsEditable" Value="true">
                        <Setter Property="Control.IsTabStop" Value="false"/>
                        <Setter Property="Control.Padding" Value="2"/>
                        <Setter Property="Control.Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                      </Trigger>
                    </Style.Triggers>
                  </Style>
                  <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Background" Color="#1F1F21"/>
                  <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Border" Color="#abacb4"/>
                  <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Background" Color="#1c1c20"/>
                  <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Border" Color="#00abacb4"/>
                  <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Background" Color="#1c1c20"/>
                  <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Border" Color="#00abacb4"/>
                  <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Background" Color="#1c1c20"/>
                  <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Border" Color="#00DADADA"/>
                  <SolidColorBrush x:Key="ComboBoxItem.ItemsviewFocus.Border" Color="#FF26A0DA"/>
                  <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Background" Color="#1f1f20"/>
                  <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Border" Color="#1c1c20"/>
                  <Style x:Key="ComboBoxItemStyle1" TargetType="{x:Type ComboBoxItem}">
                    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
                    <Setter Property="Control.Padding" Value="4,1"/>
                    <Setter Property="Control.HorizontalContentAlignment"
                            Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="Control.VerticalContentAlignment"
                            Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="Control.Background" Value="Transparent"/>
                    <Setter Property="Control.BorderBrush" Value="Transparent"/>
                    <Setter Property="Control.BorderThickness" Value="1"/>
                    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                    <Setter Property="Control.Template">
                      <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                          <Border x:Name="Bd" BorderBrush="{TemplateBinding Control.BorderBrush}"
                                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                                  Background="{TemplateBinding Control.Background}" Padding="{TemplateBinding Control.Padding}"
                                  SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
                          </Border>
                          <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsEnabled" Value="false">
                              <Setter TargetName="Bd" Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}"
                                      Property="TextElement.Foreground"/>
                            </Trigger>
                            <MultiTrigger>
                              <MultiTrigger.Conditions>
                                <Condition Property="ListBoxItem.IsSelected" Value="false"/>
                                <Condition Property="UIElement.IsMouseOver" Value="true"/>
                                <Condition Property="UIElement.IsKeyboardFocused" Value="false"/>
                              </MultiTrigger.Conditions>
                              <Setter TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHover.Background}"
                                      Property="Border.Background"/>
                              <Setter TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHover.Border}"
                                      Property="Border.BorderBrush"/>
                            </MultiTrigger>
                            <MultiTrigger>
                              <MultiTrigger.Conditions>
                                <Condition Property="ListBoxItem.IsSelected" Value="true"/>
                                <Condition Property="UIElement.IsMouseOver" Value="false"/>
                                <Condition Property="UIElement.IsKeyboardFocused" Value="true"/>
                              </MultiTrigger.Conditions>
                              <Setter TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelected.Background}"
                                      Property="Border.Background"/>
                              <Setter TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelected.Border}"
                                      Property="Border.BorderBrush"/>
                            </MultiTrigger>
                            <MultiTrigger>
                              <MultiTrigger.Conditions>
                                <Condition Property="ListBoxItem.IsSelected" Value="true"/>
                                <Condition Property="UIElement.IsMouseOver" Value="true"/>
                              </MultiTrigger.Conditions>
                              <Setter TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedHover.Background}"
                                      Property="Border.Background"/>
                              <Setter TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedHover.Border}"
                                      Property="Border.BorderBrush"/>
                            </MultiTrigger>
                            <MultiTrigger>
                              <MultiTrigger.Conditions>
                                <Condition Property="ListBoxItem.IsSelected" Value="true"/>
                                <Condition Property="UIElement.IsMouseOver" Value="false"/>
                                <Condition Property="UIElement.IsKeyboardFocused" Value="false"/>
                              </MultiTrigger.Conditions>
                              <Setter TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Background}"
                                      Property="Border.Background"/>
                              <Setter TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Border}"
                                      Property="Border.BorderBrush"/>
                            </MultiTrigger>
                            <MultiTrigger>
                              <MultiTrigger.Conditions>
                                <Condition Property="ListBoxItem.IsSelected" Value="false"/>
                                <Condition Property="UIElement.IsMouseOver" Value="false"/>
                                <Condition Property="UIElement.IsKeyboardFocused" Value="true"/>
                              </MultiTrigger.Conditions>
                              <Setter TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewFocus.Border}"
                                      Property="Border.BorderBrush"/>
                            </MultiTrigger>
                            <MultiTrigger>
                              <MultiTrigger.Conditions>
                                <Condition Property="ListBoxItem.IsSelected" Value="false"/>
                                <Condition Property="UIElement.IsMouseOver" Value="true"/>
                                <Condition Property="UIElement.IsKeyboardFocused" Value="true"/>
                              </MultiTrigger.Conditions>
                              <Setter TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHoverFocus.Background}"
                                      Property="Border.Background"/>
                              <Setter TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHoverFocus.Border}"
                                      Property="Border.BorderBrush"/>
                            </MultiTrigger>
                          </ControlTemplate.Triggers>
                        </ControlTemplate>
                      </Setter.Value>
                    </Setter>
                  </Style>
                </FrameworkElement.Resources>
                <DataGrid.Columns>
                  <DataGridTextColumn Header="SteamID" Width="38*" Binding="{Binding SteamID, UpdateSourceTrigger=PropertyChanged}"/>
                  <DataGridTemplateColumn Header="Type" Width="22*">
                    <DataGridTemplateColumn.CellTemplate>
                      <DataTemplate>
                        <ComboBox Style="{DynamicResource ComboBoxStyle1}" Margin="0" VerticalAlignment="Center"
                                  SelectedIndex="{Binding Type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                          <ComboBoxItem Content="Both"/>
                          <ComboBoxItem Content="Enemy"/>
                          <ComboBoxItem Content="Ally"/>
                          <ComboBoxItem Content="Snipe Both"/>
                          <ComboBoxItem Content="Snipe Enemy"/>
                          <ComboBoxItem Content="Snipe Ally"/>
                        </ComboBox>
                      </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                  </DataGridTemplateColumn>
                  <DataGridTextColumn Header="Comment" Width="50*" Binding="{Binding Comment, UpdateSourceTrigger=PropertyChanged}"/>
                  <DataGridTemplateColumn Header="" Width="5*">
                    <DataGridTemplateColumn.CellTemplate>
                      <DataTemplate>
                        <Button x:Name="btnView" Content="X"/>
                      </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                  </DataGridTemplateColumn>
                </DataGrid.Columns>
              </DataGrid>
            </Viewbox>
          </Grid>
          <Grid Row="2" Visibility="Hidden">
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
              <StackPanel Orientation="Vertical">
                <TextBlock TextAlignment="Right" HorizontalAlignment="Right" VerticalAlignment="Top" Foreground="White"
                           FontSize="13" Width="120" Margin="0, 0, 15, 0" Text="SteamID:" Background="{x:Null}"/>
                <TextBox BorderThickness="1" Margin="4, 0, 4, 10" Width="120" TextWrapping="Wrap" FontSize="16"
                         BorderBrush="#FF242434" SelectionBrush="#FF7FA8CB" Background="#FF1F1F21" Foreground="#FFE6E8F3"
                         Height="25" VerticalAlignment="Bottom" Text=""/>
              </StackPanel>
              <StackPanel Orientation="Vertical">
                <TextBlock TextAlignment="Right" HorizontalAlignment="Right" VerticalAlignment="Top" Foreground="White"
                           FontSize="13" Width="120" Margin="0, 0, 15, 0" Text="Comment:" Background="{x:Null}"/>
                <TextBox BorderThickness="1" Margin="4, 0, 4, 10" Width="120" TextWrapping="Wrap" FontSize="16"
                         BorderBrush="#FF242434" SelectionBrush="#FF7FA8CB" Background="#FF1F1F21" Foreground="#FFE6E8F3"
                         Height="25" VerticalAlignment="Bottom" Text=""/>
              </StackPanel>
              <StackPanel Orientation="Vertical" VerticalAlignment="Bottom" Margin="0 1">
                <Button VerticalAlignment="Top" Margin="6, 6, 6, 6">
                  <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                    <TextBlock TextWrapping="Wrap" Text="Add toxic" Height="23" TextAlignment="Center" FontSize="14"
                               Margin="6, 0, 6, 0" Foreground="#fafafa" Grid.ColumnSpan="2"/>
                  </StackPanel>
                </Button>
              </StackPanel>
            </StackPanel>
          </Grid>
        </Grid>
        <Grid x:Name="main_grid" Column="0" Visibility="Visible">
          <Grid.RowDefinitions>
            <RowDefinition Height="109*"/>
            <RowDefinition Height="65*"/>
            <RowDefinition Height="120*"/>
          </Grid.RowDefinitions>
          <Grid Row="0">
            <ListBox SelectionChanged="Cheat_list_box_SelectionChanged" Name="cheat_list_box" Margin="10, 10, 10, 10"
                     Padding="10, 0, 0, 0" HorizontalAlignment="Center" VerticalAlignment="Center" Width="360"
                     Height="89" Background="#292930" Foreground="#FFDDDDDD"/>
          </Grid>
          <Grid Row="1">
            <Grid.RowDefinitions>
              <RowDefinition/>
              <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid Row="1">
              <TextBox x:Name="startup_dota_parameters" BorderThickness="1" Margin="10, 0, 10, 10" TextWrapping="Wrap"
                       FontSize="16" BorderBrush="#FF242434" SelectionBrush="#FF7FA8CB" Background="#FF1F1F21"
                       Foreground="#FFE6E8F3" Height="25" VerticalAlignment="Bottom" Text=""/>
            </Grid>
            <Grid Row="0">
              <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
              </Grid.ColumnDefinitions>
              <Grid Column="0">
                <CheckBox x:Name="HwidSpooferCheckbox" Margin="10 0 0 0" IsChecked="True" FontSize="13" Height="20"
                          Foreground="White" Visibility="Hidden" Content="Steam hwid spoofer"/>
              </Grid>
              <Grid Column="1">
                <TextBlock TextAlignment="Right" HorizontalAlignment="Right" VerticalAlignment="Top" Foreground="White"
                           FontSize="13" Width="200" Margin="0, 5, 15, 0" Text="Custom game launch options:"
                           Background="{x:Null}"/>
              </Grid>
            </Grid>
          </Grid>
          <Grid Row="2">
            <Grid x:Name="cheat_log" Visibility="Visible">
              <GroupBox Padding="5" Margin="5">
                <HeaderedContentControl.Header>
                  <TextBlock Padding="20, 0, 20, 0" Foreground="#574" Text="Loader log" FontWeight="Bold"/>
                </HeaderedContentControl.Header>
                <RichTextBox TextChanged="Log_window_TextChanged" x:Name="log_window" Margin="2" BorderThickness="1"
                             SelectionBrush="#FF5D5D5D" Foreground="Gray" IsReadOnly="true" Background="{x:Null}"
                             BorderBrush="{x:Null}">
                  <FlowDocument LineHeight="1">
                    <Paragraph>
                      <Run Text="Hi! It`s log window."/>
                      <LineBreak/>
                      <Run/>
                    </Paragraph>
                  </FlowDocument>
                </RichTextBox>
              </GroupBox>
            </Grid>
          </Grid>
        </Grid>
        <Grid Column="1">
          <Grid.RowDefinitions>
            <RowDefinition Height="118*"/>
            <RowDefinition Height="36*"/>
            <RowDefinition Height="93*"/>
            <RowDefinition Height="45*"/>
          </Grid.RowDefinitions>
          <Grid Row="0">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="55*"/>
              <ColumnDefinition Width="110*"/>
              <ColumnDefinition Width="55*"/>
            </Grid.ColumnDefinitions>
            <Grid Column="1">
              <Ellipse Margin="6" Width="100" Height="100">
                <Shape.Fill>
                  <ImageBrush x:Name="controlPanel_logo" ImageSource="images/default_avatar.png"/>
                </Shape.Fill>
              </Ellipse>
              <Grid x:Name="m_activate_promo" HorizontalAlignment="Left" VerticalAlignment="Bottom">
                <Button Click="Button_Click" Style="{StaticResource key_button}" VerticalAlignment="Top" Margin="5">
                  <ContentControl.Content>
                    <Border>
                      <StackPanel VerticalAlignment="Center" Margin="0">
                        <Ellipse Margin="4" Height="20" Width="20">
                          <Shape.Fill>
                            <ImageBrush x:Name="key_logo" ImageSource="images/key.png"/>
                          </Shape.Fill>
                        </Ellipse>
                      </StackPanel>
                    </Border>
                  </ContentControl.Content>
                </Button>
              </Grid>
              <Grid x:Name="m_exit" HorizontalAlignment="Right" VerticalAlignment="Bottom" Visibility="Visible">
                <Button Click="Button_Click_2" Style="{StaticResource key_button}" VerticalAlignment="Top" Margin="5">
                  <ContentControl.Content>
                    <Border>
                      <StackPanel VerticalAlignment="Center" Margin="0">
                        <Ellipse Margin="4" Height="20" Width="20">
                          <Shape.Fill>
                            <ImageBrush x:Name="exit_logo" ImageSource="images/exit.png"/>
                          </Shape.Fill>
                        </Ellipse>
                      </StackPanel>
                    </Border>
                  </ContentControl.Content>
                </Button>
              </Grid>
            </Grid>
          </Grid>
          <Grid Row="1">
            <TextBlock x:Name="m_name" TextWrapping="Wrap" Text="NickName" VerticalAlignment="Top" Height="30"
                       FontWeight="Bold" TextAlignment="Center" FontSize="20" Margin="0, 0, 0, 0" Foreground="#FFBCFF74"
                       HorizontalAlignment="Center" Grid.Row="2"/>
          </Grid>
          <Grid Row="2">
            <StackPanel>
              <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <TextBlock x:Name="m_expire" Visibility="Visible" TextWrapping="Wrap" Text="Expire date: Unknown"
                           VerticalAlignment="Center" Height="26" FontWeight="Bold" TextAlignment="Center" FontSize="13"
                           Margin="0, 0, 0, 0" Foreground="#A9A9A9" HorizontalAlignment="Center" Grid.Row="2"/>
              </StackPanel>
              <StackPanel x:Name="sp_status" Visibility="Collapsed" Orientation="Horizontal" HorizontalAlignment="Center"
                          Margin="0,12,0,0">
                <TextBlock x:Name="m_status_label" Visibility="Visible" TextWrapping="Wrap" Text="Status: "
                           VerticalAlignment="Center" FontWeight="Bold" TextAlignment="Center" FontSize="15"
                           Margin="0, 0, 0, 0" Foreground="#A9A9A9" HorizontalAlignment="Center"/>
                <TextBlock x:Name="m_status" Visibility="Visible" TextWrapping="Wrap" Text="unknown"
                           VerticalAlignment="Center" FontWeight="Bold" TextAlignment="Center" FontSize="15"
                           Margin="0, 0, 0, 0" Foreground="#d1e0b8" HorizontalAlignment="Center"/>
              </StackPanel>
              <StackPanel x:Name="sp_update_data" Visibility="Collapsed" Orientation="Vertical" HorizontalAlignment="Center">
                <TextBlock Visibility="Visible" TextWrapping="Wrap" Text="Last update: " VerticalAlignment="Center"
                           FontWeight="Bold" TextAlignment="Center" FontSize="14" Margin="0, 0, 0, 0" Foreground="#A9A9A9"
                           HorizontalAlignment="Center"/>
                <TextBlock x:Name="m_update_data" Visibility="Visible" TextWrapping="Wrap" Text="01.01.1970"
                           VerticalAlignment="Center" FontWeight="Bold" TextAlignment="Center" FontSize="14"
                           Margin="0, 0, 0, 0" Foreground="#d1e0b8" HorizontalAlignment="Center"/>
              </StackPanel>
            </StackPanel>
          </Grid>
          <Grid Row="3">
            <Button Click="Button_Click_1" x:Name="start_game_btn" VerticalAlignment="Top" Margin="20, 8">
              <ContentControl.Content>
                <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                  <ImageAwesome x:Name="loading_ico" Icon="Spinner" Spin="true" SpinDuration="4" FrameworkElement.Height="15"
                                FrameworkElement.Margin="0, 0, 10, 0" UIElement.Visibility="Visible"/>
                  <TextBlock x:Name="launch_button" TextWrapping="Wrap" Text="Launch Game" Height="30" FontWeight="Bold"
                             TextAlignment="Center" FontSize="18" Margin="0,0,0,0" Foreground="#fafafa" Grid.ColumnSpan="2"/>
                </StackPanel>
              </ContentControl.Content>
            </Button>
          </Grid>
        </Grid>
      </Grid>
    </Grid>
  </Grid>
</Window>